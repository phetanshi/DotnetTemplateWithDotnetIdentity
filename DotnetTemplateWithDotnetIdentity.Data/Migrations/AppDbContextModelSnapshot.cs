// <auto-generated />
using System;
using DotnetTemplateWithDotnetIdentity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotnetTemplateWithDotnetIdentity.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.AppConfig", b =>
                {
                    b.Property<int>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfigValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ConfigId");

                    b.ToTable("tblAppConfigs");

                    b.HasData(
                        new
                        {
                            ConfigId = 1,
                            ConfigKey = "AuthType",
                            ConfigValue = "NTLM",
                            IsActive = true,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3443)
                        });
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.AppMenuGroup", b =>
                {
                    b.Property<int>("AppMenuGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppMenuGroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppMenuGroupId");

                    b.ToTable("tblAppMenuGroups");

                    b.HasData(
                        new
                        {
                            AppMenuGroupId = 1,
                            AppMenuGroupName = "Admin",
                            IsActive = true
                        },
                        new
                        {
                            AppMenuGroupId = 2,
                            AppMenuGroupName = "Support",
                            IsActive = true
                        },
                        new
                        {
                            AppMenuGroupId = 3,
                            AppMenuGroupName = "User",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.AppMenuItem", b =>
                {
                    b.Property<int>("AppMenuItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AppMenuGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MenuItem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MenuItemDesc")
                        .HasColumnType("TEXT");

                    b.HasKey("AppMenuItemId");

                    b.HasIndex("AppMenuGroupId");

                    b.ToTable("tblAppMenuItems");

                    b.HasData(
                        new
                        {
                            AppMenuItemId = 1,
                            AppMenuGroupId = 3,
                            IsActive = true,
                            MenuItem = "User",
                            MenuItemDesc = "User information will be displayed"
                        },
                        new
                        {
                            AppMenuItemId = 2,
                            AppMenuGroupId = 1,
                            IsActive = true,
                            MenuItem = "AppConfig",
                            MenuItemDesc = "App config information will be avaliable"
                        },
                        new
                        {
                            AppMenuItemId = 3,
                            AppMenuGroupId = 2,
                            IsActive = true,
                            MenuItem = "ActivityLogs",
                            MenuItemDesc = "Activity Logs"
                        },
                        new
                        {
                            AppMenuItemId = 4,
                            AppMenuGroupId = 2,
                            IsActive = true,
                            MenuItem = "ErrorLogs",
                            MenuItemDesc = "Error Logs"
                        });
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.AppRole", b =>
                {
                    b.Property<int>("AppRoleId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleDesc")
                        .HasColumnType("TEXT");

                    b.HasKey("AppRoleId");

                    b.ToTable("tblAppRoles");

                    b.HasData(
                        new
                        {
                            AppRoleId = 1,
                            IsActive = true,
                            Role = "Admin",
                            RoleDesc = "Application Administrator"
                        },
                        new
                        {
                            AppRoleId = 2,
                            IsActive = true,
                            Role = "Support",
                            RoleDesc = "Application Support team"
                        },
                        new
                        {
                            AppRoleId = 3,
                            IsActive = true,
                            Role = "Default",
                            RoleDesc = "Default User"
                        });
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.AppRoleMenuMapping", b =>
                {
                    b.Property<int>("AppRoleMenuMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AppMenuGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AppRoleId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("AppRoleMenuMappingId");

                    b.HasIndex("AppMenuGroupId");

                    b.HasIndex("AppRoleId");

                    b.ToTable("tblAppRoleMenuMappings");

                    b.HasData(
                        new
                        {
                            AppRoleMenuMappingId = 1,
                            AppMenuGroupId = 1,
                            AppRoleId = 1,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3356)
                        },
                        new
                        {
                            AppRoleMenuMappingId = 2,
                            AppMenuGroupId = 2,
                            AppRoleId = 1,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3367)
                        },
                        new
                        {
                            AppRoleMenuMappingId = 3,
                            AppMenuGroupId = 3,
                            AppRoleId = 1,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3369)
                        },
                        new
                        {
                            AppRoleMenuMappingId = 4,
                            AppMenuGroupId = 2,
                            AppRoleId = 2,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3370)
                        },
                        new
                        {
                            AppRoleMenuMappingId = 5,
                            AppMenuGroupId = 3,
                            AppRoleId = 2,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3372)
                        },
                        new
                        {
                            AppRoleMenuMappingId = 6,
                            AppMenuGroupId = 3,
                            AppRoleId = 3,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3374)
                        });
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.AppUserRoleMapping", b =>
                {
                    b.Property<int>("AppUserRoleMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppRoleId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppUserRoleMappingId");

                    b.HasIndex("AppRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("tblAppUserRoleMappings");

                    b.HasData(
                        new
                        {
                            AppUserRoleMappingId = 1,
                            AppRoleId = 1,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3406),
                            UserId = 1
                        },
                        new
                        {
                            AppUserRoleMappingId = 2,
                            AppRoleId = 2,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3409),
                            UserId = 2
                        },
                        new
                        {
                            AppUserRoleMappingId = 3,
                            AppRoleId = 3,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3411),
                            UserId = 3
                        },
                        new
                        {
                            AppUserRoleMappingId = 4,
                            AppRoleId = 1,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3412),
                            UserId = 4
                        },
                        new
                        {
                            AppUserRoleMappingId = 5,
                            AppRoleId = 1,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3413),
                            UserId = 5
                        },
                        new
                        {
                            AppUserRoleMappingId = 6,
                            AppRoleId = 1,
                            IsActive = false,
                            UpdatedBy = "seeder",
                            UpdatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3416),
                            UserId = 6
                        });
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("ManagerId");

                    b.ToTable("tblUsers");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedBy = "seeder",
                            CreatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3176),
                            Email = "ps-admin@padmasekhar.com",
                            FirstName = "Admin",
                            IsActive = true,
                            LastName = "User",
                            UserName = "ps-admin@padmasekhar.com"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedBy = "seeder",
                            CreatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3186),
                            Email = "app-support@padmasekhar.com",
                            FirstName = "Padmasekhar",
                            IsActive = true,
                            LastName = "Pottepalem",
                            UserName = "app-support@padmasekhar.com"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedBy = "seeder",
                            CreatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3189),
                            Email = "padmasekhar.ps@outlook.com",
                            FirstName = "Padmasekhar",
                            IsActive = true,
                            LastName = "Pottepalem",
                            UserName = "padmasekhar.ps@outlook.com"
                        },
                        new
                        {
                            UserId = 4,
                            CreatedBy = "seeder",
                            CreatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3191),
                            Email = "PADMASEKHAR-NEW\\padma",
                            FirstName = "Padmasekhar",
                            IsActive = true,
                            LastName = "Windows",
                            UserName = "PADMASEKHAR-NEW\\padma"
                        },
                        new
                        {
                            UserId = 5,
                            CreatedBy = "seeder",
                            CreatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3193),
                            Email = "ayush-ss@padmasekhar.com",
                            FirstName = "Ayush",
                            IsActive = true,
                            LastName = "Jah",
                            UserName = "ayush-ss@padmasekhar.com"
                        },
                        new
                        {
                            UserId = 6,
                            CreatedBy = "seeder",
                            CreatedDate = new DateTime(2023, 9, 4, 14, 4, 17, 373, DateTimeKind.Utc).AddTicks(3198),
                            Email = "sumuk@padmasekhar.com",
                            FirstName = "Sumukh",
                            IsActive = true,
                            LastName = "S",
                            UserName = "sumuk@padmasekhar.com"
                        });
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.AppMenuItem", b =>
                {
                    b.HasOne("DotnetTemplateWithDotnetIdentity.Data.Models.AppMenuGroup", "AppMenuGroup")
                        .WithMany("AppMenuItems")
                        .HasForeignKey("AppMenuGroupId");

                    b.Navigation("AppMenuGroup");
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.AppRoleMenuMapping", b =>
                {
                    b.HasOne("DotnetTemplateWithDotnetIdentity.Data.Models.AppMenuGroup", "MenuGroup")
                        .WithMany("AppRoleMenuMappings")
                        .HasForeignKey("AppMenuGroupId");

                    b.HasOne("DotnetTemplateWithDotnetIdentity.Data.Models.AppRole", "Role")
                        .WithMany("AppRoleMenuMappings")
                        .HasForeignKey("AppRoleId");

                    b.Navigation("MenuGroup");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.AppUserRoleMapping", b =>
                {
                    b.HasOne("DotnetTemplateWithDotnetIdentity.Data.Models.AppRole", "Role")
                        .WithMany("AppUserRoleMappings")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotnetTemplateWithDotnetIdentity.Data.Models.User", "User")
                        .WithMany("AppUserRoleMappings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.User", b =>
                {
                    b.HasOne("DotnetTemplateWithDotnetIdentity.Data.Models.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.AppMenuGroup", b =>
                {
                    b.Navigation("AppMenuItems");

                    b.Navigation("AppRoleMenuMappings");
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.AppRole", b =>
                {
                    b.Navigation("AppRoleMenuMappings");

                    b.Navigation("AppUserRoleMappings");
                });

            modelBuilder.Entity("DotnetTemplateWithDotnetIdentity.Data.Models.User", b =>
                {
                    b.Navigation("AppUserRoleMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
